version: '3'

services:
  backend:
    # build: ./backend
    image: clairedochez959/backend
    command: sh -c "npm run build && npm run prod"
    env_file:
      - .env.dev
    ports:
      - 4000:3001
    environment:
      - CHOKIDAR_USEPOLLING=true
  frontend:
    # build: ./frontend
    image: clairedochez959/frontend
    command: sh -c "npm run build"
    env_file:
      - .env.dev
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_HOST=127.0.0.1
    volumes:
      - web-client-build:/app/.next
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: atypicar
      POSTGRES_PASSWORD: password
      POSTGRES_DB: atypicardb
      PGDATA: customDataFolder
    volumes:
      - ./dbData:/var/lib/postgresql/data/customDataFolder
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d atypicardb -U atypicar" ]
      interval: 5s
      timeout: 5s
      retries: 10
  nginx:
    image: nginx:1.21.3
    depends_on:
      - backend
      - frontend
    restart: always
    ports:
      - ${GATEWAY_PORT}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - web-client-build:/web-client-build
      - ./logs:/var/log/nginx
volumes:
  web-client-build:
