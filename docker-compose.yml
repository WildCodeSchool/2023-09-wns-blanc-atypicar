services:
  backend:
    build: ./backend
    env_file:
      - .env.dev
    ports:
      - 4000:3001
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./backend/.env:/app/.env:rw
      - ./backend/src:/app/src:rw
      - ./backend/migrations:/app/migrations:rw

  frontend:
    build: ./frontend
    command: npm run dev
    env_file:
      - .env.dev
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_HOST=127.0.0.1
    volumes:
      - ./frontend/src:/app/src:rw

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: atypicar
      POSTGRES_PASSWORD: password
      POSTGRES_DB: atypicardb
      PGDATA: customDataFolder
    volumes:
      - ./dbData:/var/lib/postgresql/data/customDataFolder
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d atypicardb -U atypicar" ]
      interval: 5s
      timeout: 5s
      retries: 10

  images:
    build: ./images
    volumes:
      - ./images/src:/app/src
      - ./images/uploads:/app/uploads
    ports:
      - 8000:8000

  adminer:
    image: adminer
    ports:
      - 8080:8080

  redis:
    image: redis
  redis-commander:
    image: rediscommander/redis-commander
    environment:
      - REDIS_HOSTS=redis
    ports:
      - "8081:8081"

volumes:
  web-client-build: